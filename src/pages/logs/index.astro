---
import BaseLayout from "@/layouts/BaseLayout.astro";
import LogLayout from "@/layouts/LogLayout.astro";
import { getCollection, getEntry, render } from "astro:content";
import readingTime from "reading-time";
import { ChevronLeft } from "@lucide/svelte";
import Button from "$lib/components/ui/button/button.svelte";

const logs = await getCollection("logs");
if (!logs) {
    throw new Error(`Logs not found`);
}

console.log(logs.length);

const logPreviews = await getCollection("logPreviews");
if (!logPreviews) {
    throw new Error(`LogPreviews not found`);
}
// const { Content, headings } = await render(log);

// const author = await getEntry(logData.author.collection, logData.author.id);
// if (!author) {
//     throw new Error(`Author not found for slug: ${logData.author.id}`);
// }
// const authorData = author.data;

// const stats = readingTime(log.body ?? "");

const logBorderWidth = "1px";
---

<BaseLayout>
    <div class="prose-container">
        <Button asChild class="py-2" variant="ghost" href="/"
            ><div class="inline-flex"><ChevronLeft />HOME</div></Button
        >
        <h1 class="py-4">Logs</h1>
        <div class="flex flex-col">
            <div class="border-b"></div>
            {
                logs.map(async (log) => {
                    const preview = logPreviews.find(
                        (preview) => preview.data.slug === log.data.slug
                    );
                    if (!preview) {
                        throw new Error(
                            `Preview not found for slug: ${log.data.slug}`
                        );
                    }
                    const { Content, headings } = await render(preview);

                    const author = await getEntry(
                        log.data.author.collection,
                        log.data.author.id
                    );
                    if (!author) {
                        throw new Error(
                            `Author not found for slug: ${log.data.author.id}`
                        );
                    }

                    const stats = readingTime(log.body ?? "");

                    return (
                        <div class={`py-2 border-b`}>
                            <a
                                href={`/logs/${log.data.slug}`}
                                class="link-button"
                            >
                                <div
                                    class={`card-fade-out h-[11rem] link-button rounded-lg`}
                                >
                                    <LogLayout
                                        log={log}
                                        author={author}
                                        stats={stats}
                                        preview={true}
                                    >
                                        <Content />
                                    </LogLayout>
                                </div>
                            </a>
                        </div>
                    );
                })
            }
        </div>
    </div>
</BaseLayout>

<style define:vars={{ logBorderWidth }}>
    .border-b {
        border-bottom-width: var(--logBorderWidth);
    }
</style>
