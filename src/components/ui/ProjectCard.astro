---
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro"; // type for imported/optimized images
import AstroSVG from "@/assets/astro.svg";
import { type LanguageIconTag, languageIcons } from "$lib/languageIcons";
import IconLink from "./IconLink.astro";

export interface Props {
    title: string;
    description?: string;
    images?: Array<{ image: ImageMetadata | string; alt?: string }>; // allow local imports or remote URLs
    languages?: LanguageIconTag[];
    blogTag?: string;
    projectLink?: string | URL;
    githubLink?: string | URL;
    [key: string]: unknown;
}

const {
    title,
    description,
    images,
    languages,
    blogTag,
    projectLink,
    githubLink,
    ...rest
} = Astro.props;

const first = images?.[0]?.image as string | ImageMetadata | undefined;

const src = (typeof first === "string" ? first : first?.src) ?? AstroSVG.src;

export function toSrc(img?: string | ImageMetadata) {
    return typeof img === "string" ? img : img?.src;
}
---

<div {...rest}>
    <div class="flex flex-col text-center h-full overflow-hidden">
        <div class="relative items-center justify-center h-64 border-b-2">
            <img
                src={src}
                alt={(images &&
                    images[0] &&
                    (images[0].alt || `A picture of ${title}`)) ||
                    "Placeholder Image"}
                class="w-full h-full object-cover"
            />
            <h4 class="p-2 absolute bg-card/80 rounded-br-md top-0 left-0">
                {title}
            </h4>
        </div>

        {description && <p class="text-muted-foreground">{description}</p>}
        {
            languages && (
                <div class="flex gap-2 justify-center mt-auto p-2">
                    {languages.map((language) => {
                        const Icon = languageIcons[language].icon;
                        return <Icon class="language-icon" />;
                    })}
                    {githubLink &&
                        (() => {
                            const Icon = languageIcons.github.icon;
                            return (
                                <IconLink
                                    href={githubLink}
                                    label="View on Github"
                                    icon={Icon}
                                    class="language-icon"
                                />
                            );
                        })}
                </div>
            )
        }
    </div>
</div>
