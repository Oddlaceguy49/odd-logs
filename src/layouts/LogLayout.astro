---
import type { CollectionEntry } from "astro:content";
import type { ReadTimeResults } from "reading-time";
import { formatDate } from "@/utils/time";

interface Props {
    log: CollectionEntry<"logs">;
    author: CollectionEntry<"authors">;
    stats: ReadTimeResults;
}
const { log, author, stats, ...rest } = Astro.props;

const logData = log.data;
const authorData = author.data;

const dateOptions: Intl.DateTimeFormatOptions = {
    year: "numeric",
    month: "numeric",
    day: "numeric",
    // hour: "numeric",
    // minute: "numeric",
    // second: "numeric",
    // hour12: false,
    // timeZoneName: "longOffset",
};
---

<article {...rest}>
    <div class="mb-4">
        <h2 class="-mb-1">{logData.title}</h2>
        <div
            class="flex justify-between text-base text-muted-foreground italic"
        >
            <div class="flex flex-wrap items-center gap-x-4">
                {/* Author Link */}
                {
                    /* <div>
                        <span>By </span>
                        <!-- <a
                    href={`/author/${authorData.slug}`}
                    class="font-medium text-foreground hover:underline"
                > -->
                        {authorData.name}
                    </div> */
                }

                {/* Separator */}
                <!-- <span aria-hidden="true">•</span> -->

                {/* Publication Date */}
                <time datetime={new Date(logData.pubDate).toISOString()}>
                    {formatDate(logData.pubDate.toLocaleString(), dateOptions)}
                </time>

                {/* Separator */}
                <span aria-hidden="true">•</span>

                <div>{stats.text}</div>
            </div>
            <div class="flex flex-wrap items-center gap-x-4">
                {/* Updated Date (conditional) */}
                {
                    logData.updatedDate && (
                        <>
                            {/* <span aria-hidden="true">•</span> */}
                            <time
                                datetime={new Date(
                                    logData.updatedDate
                                ).toISOString()}
                            >
                                Last Updated:{" "}
                                {formatDate(
                                    logData.updatedDate.toDateString(),
                                    dateOptions
                                )}
                            </time>
                        </>
                    )
                }
            </div>
        </div>
    </div>
    <slot />
</article>
