---
import { combineAnimations, slideAndFade } from "$lib/animations/animations";
import "@/styles/global.css";
import { ClientRouter, fade, slide } from "astro:transitions";
import type { TransitionDirectionalAnimations } from "astro";
import { ModeWatcher } from "mode-watcher";

const transitionDuration = 1000;
const slideAndFadeTransition: TransitionDirectionalAnimations = {
    forwards: {
        old: [
            {
                name: "fade-in",
                duration: transitionDuration,
                easing: "ease-in",
                direction: "reverse",
            },
            {
                name: "slide-from-right",
                duration: transitionDuration,
                easing: "ease-in",
                direction: "reverse",
            },
        ],
        new: [
            {
                name: "fade-in",
                duration: transitionDuration,
                easing: "ease-in",
            },
            {
                name: "slide-from-left",
                duration: transitionDuration,
                easing: "ease-in",
            },
        ],
    },
    backwards: {
        old: [
            {
                name: "fade-in",
                duration: transitionDuration,
                easing: "ease-in",
                direction: "reverse",
            },
            {
                name: "slide-from-left",
                duration: transitionDuration,
                easing: "ease-in",
                direction: "reverse",
            },
        ],
        new: [
            {
                name: "fade-in",
                duration: transitionDuration,
                easing: "ease-in",
            },
            {
                name: "slide-from-right",
                duration: transitionDuration,
                easing: "ease-in",
            },
        ],
    },
};

const slideDistance = "5%";
---

<script is:inline>
    const getModePreference = () => {
        const storageKey = "mode-watcher-mode";
        if (typeof localStorage === "undefined") {
            return "light";
        }

        const storedMode = localStorage.getItem(storageKey);
        // Handle set preferences
        if (storedMode === "dark" || storedMode === "light") {
            return storedMode;
        }

        // Handle system preferences
        return window.matchMedia("(prefers-color-scheme: dark)").matches
            ? "dark"
            : "light";
    };

    const updateMode = () => {
        const isDark = getModePreference() === "dark";
        document.documentElement.classList[isDark ? "add" : "remove"]("dark");
    };

    updateMode();

    // Handle swaps
    document.addEventListener("astro:after-swap", updateMode);
</script>

<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="generator" content={Astro.generator} />

        <title>Astro Basics</title>
        <ClientRouter />
    </head>
    <body>
        <ModeWatcher client:load transition:persist="mode-watcher" />
        <!-- <BaseSvelteLayout client:load /> -->
        <main
            transition:animate={slideAndFadeTransition}
            style={`--slide-distance: ${slideDistance};`}
        >
            <slot />
        </main>

        <style>
            html,
            body {
                margin: 0;
                width: 100%;
                height: 100%;
            }
        </style>
    </body>
</html>
